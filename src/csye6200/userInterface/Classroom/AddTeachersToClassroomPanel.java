/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csye6200.userInterface.Classroom;

import csye6200.constants.Constants;
import csye6200.entity.ClassRoom;
import csye6200.entity.Teacher;
import csye6200.service.ClassroomService;
import csye6200.service.impl.ClassroomServiceImpl;
import csye6200.service.impl.TeacherServiceImpl;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import csye6200.userInterface.DetailPanel;
import csye6200.util.RegulationUtil;

/**
 *
 * @author karen
 */
public class AddTeachersToClassroomPanel extends DetailPanel {
    private JPanel RightPanel;
    private ClassRoom classroom;

    /**
     * Creates new form AddTeachersToClassroomPanel
     */
//    public AddTeachersToClassroomPanel() {
//        initComponents();
//    }

    AddTeachersToClassroomPanel(JPanel RightPanel, ClassRoom c) {
        initComponents();
        this.RightPanel = RightPanel;
        this.classroom = c;
        txtID.setText(c.getId());
        populateTeacherTable();
    }
    
    private void populateTeacherTable() {
        int rowCount = jTeaTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel) jTeaTable.getModel();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        Object row[] = new Object[model.getColumnCount()];
        int ar = this.classroom.getAgeRange();
        TeacherServiceImpl tsi = new TeacherServiceImpl();
        List<Teacher> teachers = tsi.getTeachersByAgeRange(ar);
        if (teachers == null || teachers.isEmpty()) {
            return;
        }
        for (Teacher t : teachers) {
            row[0] = t.getId();
            row[1] = t.getfName();
            row[2] = t.getlName();
            row[3] = t.getAgeRange();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTeaTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        BackToView = new javax.swing.JButton();

        jTeaTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Teacher ID", "First Name", "Last Name", "Age Range"
            }
        ));
        jScrollPane1.setViewportView(jTeaTable);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Teacher List");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel6.setText("Classroom ID:");

        txtID.setEditable(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        BackToView.setText("Back");
        BackToView.setMaximumSize(new java.awt.Dimension(59, 29));
        BackToView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(BackToView, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1))
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                    .addComponent(BackToView, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE))
                .addContainerGap(184, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int age = this.classroom.getAgeRange();
        ClassroomServiceImpl csi = new ClassroomServiceImpl();
        List<Teacher> teachers = csi.getClassroomById(classroom.getId()).getTeachers();
        int maxTNum = RegulationUtil.getRegulationMap(age).get(Constants.MAX_GROUP_AMOUNT);
        if (teachers != null && !teachers.isEmpty() && teachers.size() > maxTNum - 1) {
            JOptionPane.showMessageDialog(null, "Maxium teacher number reached. Cannot add teacher to this classroom.", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            int row = jTeaTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a teacher from the table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String tid = (String) jTeaTable.getValueAt(row, 0);
        TeacherServiceImpl tsi = new TeacherServiceImpl();
        Teacher teacher = tsi.getTeacherById(tid);
        String result = csi.addTeacher(teacher,this.classroom.getId());
        if (result.equals("Duplicate")) JOptionPane.showMessageDialog(null, "Add fail!! This teacher has already been added to a classroom!!");
        else JOptionPane.showMessageDialog(null, "Teacher successfully added to classroom!!");
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void BackToViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToViewActionPerformed
        backToViewAction(RightPanel);
    }//GEN-LAST:event_BackToViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTeaTable;
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables
}
